{"version":3,"sources":["App.js","index.js"],"names":["quoteURL","backgroundList","App","useState","appBG","setAppBG","quote","setQuote","author","setAuthor","useEffect","getRandomQuoteData","randomQuoteIndex","Math","floor","random","randomBackgroundIndex","console","log","fetch","then","quoteResponse","json","quoteData","catch","quoteError","id","className","href","target","rel","onClick","ReactDOM","render","document","getElementById"],"mappings":"mOAIMA,G,MACJ,mFAGIC,EAAiB,CACrB,iBACA,gBACA,sBACA,yBACA,0BACA,yBACA,iBAgFaC,MA7Ef,WAAe,MAEaC,mBAAS,iBAFtB,mBAENC,EAFM,KAECC,EAFD,OAGaF,mBAAS,IAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIeJ,mBAAS,IAJxB,mBAINK,EAJM,KAIEC,EAJF,KAObC,qBAAU,WACRC,MACC,IAIH,IAAMA,EAAqB,WAEzB,IAAIC,EAAmBC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnCC,EAAwBH,KAAKC,MAAsB,EAAhBD,KAAKE,UAC5CE,QAAQC,IAAIF,GAIZG,MAAMnB,GACHoB,MAAK,SAAAC,GACJ,OAAOA,EAAcC,UAEtBF,MAAK,SAAAG,GACJhB,EAASgB,EAAUX,GAAkBN,OACrCG,EAAUc,EAAUX,GAAkBJ,QACtCH,EAASJ,EAAee,OAEzBQ,OAAM,SAAAC,GACLR,QAAQC,IAAIO,OAIlB,OACE,yBAAKC,GAAG,gBAAgBC,UAAWvB,EAAQ,2BACzC,yBAAKsB,GAAG,kBAAkBC,UAAU,oCAClC,yBAAKD,GAAG,YAAYC,UAAU,kCAC5B,yBAAKD,GAAG,OAAOC,UAAU,2CACvB,2BAAIrB,IAEN,yBAAKoB,GAAG,SAASC,UAAU,wCACzB,2BAAI,KAAOnB,IAEb,yBACEkB,GAAG,oBACHC,UAAU,oDAEV,uBACED,GAAG,cACHE,KACE,8EACAtB,EACA,IACAE,EAEFqB,OAAO,SACPC,IAAI,sBACJH,UAAU,8BAVZ,SAcA,4BACED,GAAG,YACHC,UAAU,6BACVI,QAASpB,GAHX,kBCvEZqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e3993542.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\n//Quotes json\nconst quoteURL =\n  \"https://raw.githubusercontent.com/pdouu/random-quote-machine/master/quotes.json\";\n\n//Background color gradient\nconst backgroundList = [\n  \"peach-gradient\",\n  \"aqua-gradient\",\n  \"warm-flame-gradient\",\n  \"young-passion-gradient\",\n  \"rainy-ashville-gradient\",\n  \"sunny-morning-gradient\",\n  \"blue-gradient\"\n];\n\nfunction App() {\n  //States for background quote and quote author\n  const [appBG, setAppBG] = useState(\"blue-gradient\");\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  //Getting random quotes on page reload or first load\n  useEffect(() => {\n    getRandomQuoteData();\n  }, []);\n\n  //Getting random quotes and random background\n  //On reload or on click\n  const getRandomQuoteData = () => {\n    //Setting two numbers for getting random background and quotes\n    let randomQuoteIndex = Math.floor(Math.random() * 102);\n    let randomBackgroundIndex = Math.floor(Math.random() * 6);\n    console.log(randomBackgroundIndex);\n\n    //Getting quotes from given json.\n    //Selecting random quote and its author by random number.\n    fetch(quoteURL)\n      .then(quoteResponse => {\n        return quoteResponse.json();\n      })\n      .then(quoteData => {\n        setQuote(quoteData[randomQuoteIndex].quote);\n        setAuthor(quoteData[randomQuoteIndex].author);\n        setAppBG(backgroundList[randomBackgroundIndex]);\n      })\n      .catch(quoteError => {\n        console.log(quoteError);\n      });\n  };\n  //Render\n  return (\n    <div id=\"dis-container\" className={appBG + \" container-fluid vh-100\"}>\n      <div id=\"quote-container\" className=\"row justify-content-center h-100\">\n        <div id=\"quote-box\" className=\"col-4 text-center my-auto h-25\">\n          <div id=\"text\" className=\"row text-dark h2 justify-content-center\">\n            <p>{quote}</p>\n          </div>\n          <div id=\"author\" className=\"row text-dark h4 justify-content-end\">\n            <p>{\"- \" + author}</p>\n          </div>\n          <div\n            id=\"buttons-container\"\n            className=\"row align-items-end justify-content-between mt-5\"\n          >\n            <a\n              id=\"tweet-quote\"\n              href={\n                \"https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\" +\n                quote +\n                \"-\" +\n                author\n              }\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"btn btn-lg peach-gradient \"\n            >\n              Tweet\n            </a>\n            <button\n              id=\"new-quote\"\n              className=\"btn btn-lg purple-gradient\"\n              onClick={getRandomQuoteData}\n            >\n              New Quote\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport App from \"./App\";\n\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}