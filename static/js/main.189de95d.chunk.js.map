{"version":3,"sources":["App.js","index.js"],"names":["backgroundList","App","useState","appBG","setAppBG","quote","setQuote","author","setAuthor","useEffect","getRandomQuoteData","randomQuoteIndex","Math","floor","random","randomBackgroundIndex","console","log","fetch","then","quoteResponse","json","quoteData","catch","quoteError","id","className","href","target","rel","onClick","ReactDOM","render","document","getElementById"],"mappings":"uPAQMA,G,MAAiB,CACrB,iBACA,gBACA,sBACA,yBACA,0BACA,yBACA,kBA0FaC,MAvFf,WAAe,MAEaC,mBAAS,iBAFtB,mBAENC,EAFM,KAECC,EAFD,OAGaF,mBAAS,IAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIeJ,mBAAS,IAJxB,mBAINK,EAJM,KAIEC,EAJF,KAObC,qBAAU,WACRC,MACC,IAIH,IAAMA,EAAqB,WAEzB,IAAIC,EAAmBC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnCC,EAAwBH,KAAKC,MAAsB,EAAhBD,KAAKE,UAC5CE,QAAQC,IAAIF,GAIZG,MAlCF,0IAmCKC,MAAK,SAACC,GACL,OAAOA,EAAcC,UAEtBF,MAAK,SAACG,GACLhB,EAASgB,EAAUX,GAAkBN,OACrCG,EAAUc,EAAUX,GAAkBJ,QACtCH,EAASJ,EAAee,OAEzBQ,OAAM,SAACC,GACNR,QAAQC,IAAIO,OAIlB,OACE,qBAAKC,GAAG,gBAAgBC,UAAWvB,EAAQ,0BAA3C,SACE,qBAAKsB,GAAG,kBAAkBC,UAAU,mCAApC,SACE,sBAAKD,GAAG,YAAYC,UAAU,oCAA9B,UACE,qBAAKD,GAAG,OAAOC,UAAU,0CAAzB,SACE,4BAAIrB,MAEN,qBAAKoB,GAAG,SAASC,UAAU,uCAA3B,SACE,4BAAI,KAAOnB,MAEb,sBACEkB,GAAG,oBACHC,UAAU,sDAFZ,UAIE,mBACED,GAAG,cACHE,KACE,8EACAtB,EACA,IACAE,EAEFqB,OAAO,SACPC,IAAI,sBACJH,UAAU,qCAVZ,mBAcA,wBACED,GAAG,YACHC,UAAU,sCACVI,QAASpB,EAHX,0BAQF,qBAAKgB,UAAU,iBAAf,SACE,mBACEA,UAAU,cACVC,KAAK,oDACLC,OAAO,SACPC,IAAI,sBAJN,SAMG,eCtFfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.189de95d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\n//Quotes json\r\nconst quoteURL =\r\n  \"https://gist.githubusercontent.com/yusufcmlt/721a1680752d7409997d70a666a710ac/raw/325d51aca7165b2498971afcff9bed286a52dc0e/quotes.json\";\r\n\r\n//Background color gradient\r\nconst backgroundList = [\r\n  \"peach-gradient\",\r\n  \"aqua-gradient\",\r\n  \"warm-flame-gradient\",\r\n  \"young-passion-gradient\",\r\n  \"rainy-ashville-gradient\",\r\n  \"sunny-morning-gradient\",\r\n  \"blue-gradient\",\r\n];\r\n\r\nfunction App() {\r\n  //States for background quote and quote author\r\n  const [appBG, setAppBG] = useState(\"blue-gradient\");\r\n  const [quote, setQuote] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n\r\n  //Getting random quotes on page reload or first load\r\n  useEffect(() => {\r\n    getRandomQuoteData();\r\n  }, []);\r\n\r\n  //Getting random quotes and random background\r\n  //On reload or on click\r\n  const getRandomQuoteData = () => {\r\n    //Setting two numbers for getting random background and quotes\r\n    let randomQuoteIndex = Math.floor(Math.random() * 102);\r\n    let randomBackgroundIndex = Math.floor(Math.random() * 6);\r\n    console.log(randomBackgroundIndex);\r\n\r\n    //Getting quotes from given json.\r\n    //Selecting random quote and its author by random number.\r\n    fetch(quoteURL)\r\n      .then((quoteResponse) => {\r\n        return quoteResponse.json();\r\n      })\r\n      .then((quoteData) => {\r\n        setQuote(quoteData[randomQuoteIndex].quote);\r\n        setAuthor(quoteData[randomQuoteIndex].author);\r\n        setAppBG(backgroundList[randomBackgroundIndex]);\r\n      })\r\n      .catch((quoteError) => {\r\n        console.log(quoteError);\r\n      });\r\n  };\r\n  //Render\r\n  return (\r\n    <div id=\"dis-container\" className={appBG + \" container-fluid vh-100\"}>\r\n      <div id=\"quote-container\" className=\"row justify-content-center h-100\">\r\n        <div id=\"quote-box\" className=\"col-sm-6 text-center my-auto h-25\">\r\n          <div id=\"text\" className=\"row text-dark h2 justify-content-center\">\r\n            <p>{quote}</p>\r\n          </div>\r\n          <div id=\"author\" className=\"row text-dark h4 justify-content-end\">\r\n            <p>{\"- \" + author}</p>\r\n          </div>\r\n          <div\r\n            id=\"buttons-container\"\r\n            className=\"row align-items-center justify-content-between mt-5\"\r\n          >\r\n            <a\r\n              id=\"tweet-quote\"\r\n              href={\r\n                \"https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\" +\r\n                quote +\r\n                \"-\" +\r\n                author\r\n              }\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"btn btn-lg peach-gradient btn-manu\"\r\n            >\r\n              Tweet\r\n            </a>\r\n            <button\r\n              id=\"new-quote\"\r\n              className=\"btn btn-lg purple-gradient btn-manu\"\r\n              onClick={getRandomQuoteData}\r\n            >\r\n              New Quote\r\n            </button>\r\n          </div>\r\n          <div className=\"link-container\">\r\n            <a\r\n              className=\"github-link\"\r\n              href=\"https://github.com/yusufcmlt/random-quote-machine\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {\"\"}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport App from \"./App\";\r\n\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}